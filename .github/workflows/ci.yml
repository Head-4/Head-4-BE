name: Java Gradle CI & CD

on:
  push:
    branches: [ "develop" ]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setting JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: create application.yml
      run: |
        cd ./src/main/resources
        
        touch ./application.yml
        echo "${{secrets.APPLICATOIN_YML_VALUES}}" >> ./application.yml
        
        touch ./firebaseKey.json
        echo "${{secrets.FIREBASE_PRIVATE_KEY}}" >> ./firebaseKey.json
      shell: bash

    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant Execute Permission For Gradlew
      run: chmod +x gradlew

    - name: Build With Gradle
      run: ./gradlew build -x test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Docker build and Push
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_REPO }} .
          docker push ${{ secrets.DOCKERHUB_REPO }}

      - name: Enter EC2 & Docker compose build
        uses: appleboy/ssh-action@master
        env:
          APP: "backend"
          COMPOSE: "/home/ubuntu/server-project/docker-compose.yml"
        with:
          username: ${{ secrets.AWS_EC2_USERNAME }}
          host: ${{ secrets.AWS_EC2_HOST_IP }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          env:
          script_stop: true
          script: |
            sudo docker-compose -f $COMPOSE down
            sudo docker pull ${{ secrets.DOCKERHUB_REPO }}
            sudo docker-compose -f $COMPOSE up -d